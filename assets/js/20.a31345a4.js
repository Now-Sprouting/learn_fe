(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{393:function(t,s,a){t.exports=a.p+"assets/img/tongyibu.347b7417.png"},436:function(t,s,a){"use strict";a.r(s);var n=a(43),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_8-同步和异步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-同步和异步"}},[t._v("#")]),t._v(" 8:同步和异步")]),t._v(" "),n("p",[t._v("在了解同和异步之前先了解一下JS单线程这个概念")]),t._v(" "),n("h2",{attrs:{id:"js单线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js单线程"}},[t._v("#")]),t._v(" JS单线程")]),t._v(" "),n("p",[t._v("JavaScript语言的一大特色就是"),n("code",[t._v("单线程")]),t._v(",也就是说同一时间只能做同一件事情,这是因为JavaScript这门脚本语言诞生的使命所致.")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。如果前一个任务耗时很长，后一个任务就不得不一直等着。这样所导致的问题是： 如果 JS 执行的时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞的感觉。")])]),t._v(" "),n("h2",{attrs:{id:"同步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#同步"}},[t._v("#")]),t._v(" 同步")]),t._v(" "),n("p",[t._v("前一个任务结束后再执行后一个任务，程序的执行顺序与任务的排列顺序是一致的、同步的。比如做饭的同步做法：我们要烧水煮饭，等水开了（10分钟之后），再去切菜，炒菜。")]),t._v(" "),n("h2",{attrs:{id:"异步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异步"}},[t._v("#")]),t._v(" 异步")]),t._v(" "),n("p",[t._v("你在做一件事情时，因为这件事情会花费很长时间，在做这件事的同时，你还可以去处理其他事情。比如做饭的异步做法，我们在烧水的同时，利用这10分钟，去切菜，炒菜。")]),t._v(" "),n("h2",{attrs:{id:"同步任务和异步任务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#同步任务和异步任务"}},[t._v("#")]),t._v(" 同步任务和异步任务")]),t._v(" "),n("p",[t._v("​单线程导致的问题就是后面的任务等待前面任务完成，如果前面任务很耗时（比如读取网络数据），后面任务不得不一直等待！！"),n("br")]),t._v(" "),n("p",[t._v("为了解决这个问题，利用多核 CPU 的计算能力，HTML5 提出 Web Worker 标准，允许 JavaScript 脚本创建多个线程，但是子线程完全受主线程控制。于是，JS 中出现了"),n("strong",[t._v("同步任务")]),t._v("和"),n("strong",[t._v("异步任务")])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[n("strong",[t._v("同步任务:")]),n("br"),t._v("\n在"),n("code",[t._v("主线程")]),t._v("上排队执行的任务，只有前一个任务执行完毕，才能执行后一个任务；"),n("br"),t._v(" "),n("strong",[t._v("异步任务:")]),n("br"),t._v("\n不进入主线程、而进入"),n("code",[t._v("任务队列")]),t._v("的任务，当"),n("code",[t._v("主线程")]),t._v("中的任务运行完了，才会从"),n("code",[t._v("任务队列")]),t._v("取出异步任务放入主线程执行")])]),t._v(" "),n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n")])])]),n("p",[t._v("上述代码的"),n("code",[t._v("主线程")]),t._v("和"),n("code",[t._v("任务队列")]),t._v("图"),n("br"),t._v(" "),n("img",{attrs:{src:a(393),alt:"tongyibu"}})]),t._v(" "),n("h2",{attrs:{id:"js执行机制-事件循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js执行机制-事件循环"}},[t._v("#")]),t._v(" JS执行机制(事件循环)")]),t._v(" "),n("ol",[n("li",[t._v("先执行同步任务")]),t._v(" "),n("li",[t._v("遇到异步任务先把异步任务放到异步进程处理中")]),t._v(" "),n("li",[t._v("当我们触发异步任务时(定时器到达时间或者发生点击事件)把异步进程中的异步任务发送到任务队列中")]),t._v(" "),n("li",[t._v("主线程中的同步任务执行完毕后不断查看任务队列是否有任务,有任务执行后清除该任务")])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("以上文档如有错误请联系我进行改进")])])])}),[],!1,null,null,null);s.default=r.exports}}]);